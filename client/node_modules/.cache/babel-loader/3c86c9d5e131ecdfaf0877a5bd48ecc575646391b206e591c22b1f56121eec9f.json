{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew Scherer\\\\Desktop\\\\IG Story Checker\\\\client\\\\src\\\\components\\\\batch\\\\BatchProgress.jsx\";\nimport React from 'react';\nimport './BatchProgress.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BatchProgress = ({\n  total,\n  completed,\n  failed,\n  isRunning,\n  error\n}) => {\n  const percentage = total > 0 ? Math.round(completed / total * 100) : 0;\n  const isComplete = completed === total && total > 0;\n  const hasError = !!error;\n  const getBarClass = () => {\n    if (hasError) return 'batch-progress__bar--error';\n    if (isComplete) return 'batch-progress__bar--success';\n    return '';\n  };\n  const getStatusText = () => {\n    if (hasError) return error;\n    if (isComplete) return 'Completed';\n    if (isRunning) return 'In Progress';\n    return 'Ready';\n  };\n  const getStatusClass = () => {\n    if (hasError) return 'batch-progress__status--error';\n    if (isComplete) return 'batch-progress__status--success';\n    if (isRunning) return 'batch-progress__status--running';\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"batch-progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batch-progress__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batch-progress__percentage\",\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batch-progress__stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [completed, \" completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [failed, \" failed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batch-progress__track\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `batch-progress__bar ${getBarClass()}`,\n        style: {\n          width: `${percentage}%`\n        },\n        role: \"progressbar\",\n        \"aria-valuenow\": percentage,\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `batch-progress__status ${getStatusClass()}`,\n      children: getStatusText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = BatchProgress;\nexport default BatchProgress;\nvar _c;\n$RefreshReg$(_c, \"BatchProgress\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BatchProgress","total","completed","failed","isRunning","error","percentage","Math","round","isComplete","hasError","getBarClass","getStatusText","getStatusClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","role","_c","$RefreshReg$"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/components/batch/BatchProgress.jsx"],"sourcesContent":["import React from 'react';\r\nimport './BatchProgress.scss';\r\n\r\nconst BatchProgress = ({\r\n  total,\r\n  completed,\r\n  failed,\r\n  isRunning,\r\n  error\r\n}) => {\r\n  const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\r\n  const isComplete = completed === total && total > 0;\r\n  const hasError = !!error;\r\n\r\n  const getBarClass = () => {\r\n    if (hasError) return 'batch-progress__bar--error';\r\n    if (isComplete) return 'batch-progress__bar--success';\r\n    return '';\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (hasError) return error;\r\n    if (isComplete) return 'Completed';\r\n    if (isRunning) return 'In Progress';\r\n    return 'Ready';\r\n  };\r\n\r\n  const getStatusClass = () => {\r\n    if (hasError) return 'batch-progress__status--error';\r\n    if (isComplete) return 'batch-progress__status--success';\r\n    if (isRunning) return 'batch-progress__status--running';\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"batch-progress\">\r\n      <div className=\"batch-progress__header\">\r\n        <div className=\"batch-progress__percentage\">\r\n          {percentage}%\r\n        </div>\r\n        <div className=\"batch-progress__stats\">\r\n          <span>{completed} completed</span>\r\n          <span>{failed} failed</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"batch-progress__track\">\r\n        <div \r\n          className={`batch-progress__bar ${getBarClass()}`}\r\n          style={{ width: `${percentage}%` }}\r\n          role=\"progressbar\"\r\n          aria-valuenow={percentage}\r\n          aria-valuemin={0}\r\n          aria-valuemax={100}\r\n        />\r\n      </div>\r\n\r\n      <div className={`batch-progress__status ${getStatusClass()}`}>\r\n        {getStatusText()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BatchProgress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}