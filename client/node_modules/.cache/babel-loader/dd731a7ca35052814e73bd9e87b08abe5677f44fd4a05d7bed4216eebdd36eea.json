{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew Scherer\\\\Desktop\\\\IG Story Checker\\\\client\\\\src\\\\components\\\\proxy\\\\ProxyManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport useProxyStore from '../../stores/proxyStore';\nimport Button from '../common/Button';\nimport Table from '../common/Table';\nimport './ProxyManager.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProxyManager() {\n  _s();\n  const {\n    proxies,\n    addProxy,\n    removeProxy,\n    testProxy,\n    addProxies\n  } = useProxyStore();\n  const [proxyInput, setProxyInput] = useState('');\n  const [selectedIds, setSelectedIds] = useState([]);\n  const fileInputRef = useRef(null);\n  const handleAddProxy = () => {\n    if (!proxyInput.trim()) return;\n    const [ip, port, user, pass] = proxyInput.split(':');\n    if (!ip || !port || !user || !pass) {\n      alert('Invalid proxy format. Use: ip:port:user:pass');\n      return;\n    }\n    addProxy({\n      host: ip,\n      port,\n      username: user,\n      password: pass,\n      status: 'untested'\n    });\n    setProxyInput('');\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const content = e.target.result;\n      const lines = content.split('\\n').filter(line => line.trim());\n      const newProxies = lines.map(line => {\n        const [ip, port, user, pass] = line.trim().split(':');\n        return {\n          host: ip,\n          port,\n          username: user,\n          password: pass,\n          status: 'untested'\n        };\n      }).filter(proxy => proxy.host && proxy.port && proxy.username && proxy.password);\n      if (newProxies.length > 0) {\n        addProxies(newProxies);\n      } else {\n        alert('No valid proxies found in file. Use format: ip:port:user:pass');\n      }\n    };\n    reader.readAsText(file);\n    event.target.value = null; // Reset file input\n  };\n  const handleTestSelected = async () => {\n    for (const id of selectedIds) {\n      await testProxy(id);\n    }\n  };\n  const handleDeleteSelected = () => {\n    removeProxy(selectedIds);\n    setSelectedIds([]);\n  };\n  const columns = [{\n    key: 'proxy',\n    title: 'Proxy',\n    sortable: true,\n    render: proxy => `${proxy.host}:${proxy.port}:${proxy.username}:${proxy.password}`\n  }, {\n    key: 'status',\n    title: 'Status',\n    sortable: true,\n    render: proxy => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `proxy-manager__status proxy-manager__status--${proxy.status}`,\n      children: proxy.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"proxy-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proxy-manager__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Proxy Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proxy-manager__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt\",\n          onChange: handleFileUpload,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => fileInputRef.current.click(),\n          children: \"Import from File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), selectedIds.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleTestSelected,\n            children: [\"Test Selected (\", selectedIds.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleDeleteSelected,\n            children: [\"Delete Selected (\", selectedIds.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proxy-manager__add-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: proxyInput,\n        onChange: e => setProxyInput(e.target.value),\n        placeholder: \"ip:port:user:pass\",\n        className: \"proxy-manager__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddProxy,\n        children: \"Add Proxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proxy-manager__table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        data: proxies,\n        columns: columns,\n        pageSize: 500,\n        selectable: true,\n        selectedRows: selectedIds,\n        onSelectionChange: setSelectedIds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(ProxyManager, \"H9p9JyIpDLN/b9bZF64RFFfeu5A=\", false, function () {\n  return [useProxyStore];\n});\n_c = ProxyManager;\nexport default ProxyManager;\nvar _c;\n$RefreshReg$(_c, \"ProxyManager\");","map":{"version":3,"names":["React","useState","useRef","useProxyStore","Button","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ProxyManager","_s","proxies","addProxy","removeProxy","testProxy","addProxies","proxyInput","setProxyInput","selectedIds","setSelectedIds","fileInputRef","handleAddProxy","trim","ip","port","user","pass","split","alert","host","username","password","status","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","content","result","lines","filter","line","newProxies","map","proxy","length","readAsText","value","handleTestSelected","id","handleDeleteSelected","columns","key","title","sortable","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","style","display","onClick","current","click","variant","placeholder","data","pageSize","selectable","selectedRows","onSelectionChange","_c","$RefreshReg$"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/components/proxy/ProxyManager.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport useProxyStore from '../../stores/proxyStore';\r\nimport Button from '../common/Button';\r\nimport Table from '../common/Table';\r\nimport './ProxyManager.scss';\r\n\r\nfunction ProxyManager() {\r\n  const { \r\n    proxies,\r\n    addProxy,\r\n    removeProxy,\r\n    testProxy,\r\n    addProxies\r\n  } = useProxyStore();\r\n\r\n  const [proxyInput, setProxyInput] = useState('');\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleAddProxy = () => {\r\n    if (!proxyInput.trim()) return;\r\n\r\n    const [ip, port, user, pass] = proxyInput.split(':');\r\n    if (!ip || !port || !user || !pass) {\r\n      alert('Invalid proxy format. Use: ip:port:user:pass');\r\n      return;\r\n    }\r\n\r\n    addProxy({\r\n      host: ip,\r\n      port,\r\n      username: user,\r\n      password: pass,\r\n      status: 'untested'\r\n    });\r\n    setProxyInput('');\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target.result;\r\n      const lines = content.split('\\n').filter(line => line.trim());\r\n      \r\n      const newProxies = lines.map(line => {\r\n        const [ip, port, user, pass] = line.trim().split(':');\r\n        return {\r\n          host: ip,\r\n          port,\r\n          username: user,\r\n          password: pass,\r\n          status: 'untested'\r\n        };\r\n      }).filter(proxy => proxy.host && proxy.port && proxy.username && proxy.password);\r\n\r\n      if (newProxies.length > 0) {\r\n        addProxies(newProxies);\r\n      } else {\r\n        alert('No valid proxies found in file. Use format: ip:port:user:pass');\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n    event.target.value = null; // Reset file input\r\n  };\r\n\r\n  const handleTestSelected = async () => {\r\n    for (const id of selectedIds) {\r\n      await testProxy(id);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSelected = () => {\r\n    removeProxy(selectedIds);\r\n    setSelectedIds([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      key: 'proxy',\r\n      title: 'Proxy',\r\n      sortable: true,\r\n      render: (proxy) => `${proxy.host}:${proxy.port}:${proxy.username}:${proxy.password}`\r\n    },\r\n    {\r\n      key: 'status',\r\n      title: 'Status',\r\n      sortable: true,\r\n      render: (proxy) => (\r\n        <span className={`proxy-manager__status proxy-manager__status--${proxy.status}`}>\r\n          {proxy.status}\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"proxy-manager\">\r\n      <div className=\"proxy-manager__header\">\r\n        <h2>Proxy Management</h2>\r\n        <div className=\"proxy-manager__actions\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt\"\r\n            onChange={handleFileUpload}\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <Button onClick={() => fileInputRef.current.click()}>\r\n            Import from File\r\n          </Button>\r\n          {selectedIds.length > 0 && (\r\n            <>\r\n              <Button onClick={handleTestSelected}>\r\n                Test Selected ({selectedIds.length})\r\n              </Button>\r\n              <Button variant=\"danger\" onClick={handleDeleteSelected}>\r\n                Delete Selected ({selectedIds.length})\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"proxy-manager__add-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={proxyInput}\r\n          onChange={(e) => setProxyInput(e.target.value)}\r\n          placeholder=\"ip:port:user:pass\"\r\n          className=\"proxy-manager__input\"\r\n        />\r\n        <Button onClick={handleAddProxy}>Add Proxy</Button>\r\n      </div>\r\n\r\n      <div className=\"proxy-manager__table\">\r\n        <Table\r\n          data={proxies}\r\n          columns={columns}\r\n          pageSize={500}\r\n          selectable={true}\r\n          selectedRows={selectedIds}\r\n          onSelectionChange={setSelectedIds}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProxyManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}