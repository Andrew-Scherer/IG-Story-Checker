{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew Scherer\\\\Desktop\\\\IG Story Checker\\\\client\\\\src\\\\components\\\\niche\\\\FileImporter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../common/Button';\nimport Modal from '../common/Modal';\nimport './FileImporter.scss';\n\n/**\r\n * @typedef {Object} FileImporterProps\r\n * @property {Function} onImport - Callback function when file is imported\r\n * @property {string[]} allowedTypes - Array of allowed file extensions\r\n * @property {number} maxSize - Maximum file size in bytes\r\n */\n\n/**\r\n * FileImporter component for handling file uploads with drag & drop support\r\n * @param {FileImporterProps} props\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileImporter = ({\n  onImport,\n  allowedTypes,\n  maxSize\n}) => {\n  _s();\n  const [isDragActive, setIsDragActive] = useState(false);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const fileInputRef = useRef(null);\n  const validateFile = file => {\n    const extension = '.' + file.name.split('.').pop().toLowerCase();\n    if (!allowedTypes.includes(extension)) {\n      throw new Error('Invalid file type. Allowed types: ' + allowedTypes.join(', '));\n    }\n    if (file.size > maxSize) {\n      throw new Error('File too large. Maximum size: ' + maxSize / (1024 * 1024) + 'MB');\n    }\n  };\n  const handleFile = async file => {\n    try {\n      setError('');\n      setIsLoading(true);\n      validateFile(file);\n      await onImport(file);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setIsDragActive(false);\n    const file = e.dataTransfer.files[0];\n    if (file) {\n      handleFile(file);\n    }\n  }, []);\n  const handleDragEnter = useCallback(e => {\n    e.preventDefault();\n    setIsDragActive(true);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setIsDragActive(false);\n  }, []);\n  const handleInputChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      handleFile(file);\n    }\n  };\n  const handleClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-importer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `file-importer__drop-zone ${isDragActive ? 'file-importer__drop-zone--active' : ''} ${error ? 'file-importer__drop-zone--error' : ''}`,\n      \"data-testid\": \"drop-zone\",\n      onDrop: handleDrop,\n      onDragEnter: handleDragEnter,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        className: \"file-importer__input\",\n        \"data-testid\": \"file-input\",\n        accept: allowedTypes.join(','),\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-importer__icon\",\n        children: \"\\uD83D\\uDCC1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"file-importer__text\",\n        children: [isDragActive ? 'Drop file here' : 'Drag and drop file here', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \"or click to select\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"file-importer__allowed-types\",\n        children: [\"Allowed types: \", allowedTypes.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-importer__progress\",\n      role: \"progressbar\",\n      children: \"Importing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"file-importer__error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(FileImporter, \"LTycrffh+qaJ5lxNFZ80Umo/nd8=\");\n_c = FileImporter;\nFileImporter.propTypes = {\n  onImport: PropTypes.func.isRequired,\n  allowedTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  maxSize: PropTypes.number.isRequired\n};\nexport default FileImporter;\nvar _c;\n$RefreshReg$(_c, \"FileImporter\");","map":{"version":3,"names":["React","useState","useRef","useCallback","PropTypes","Button","Modal","jsxDEV","_jsxDEV","FileImporter","onImport","allowedTypes","maxSize","_s","isDragActive","setIsDragActive","error","setError","isLoading","setIsLoading","fileInputRef","validateFile","file","extension","name","split","pop","toLowerCase","includes","Error","join","size","handleFile","err","message","handleDrop","e","preventDefault","dataTransfer","files","handleDragEnter","handleDragOver","handleDragLeave","handleInputChange","target","handleClick","_fileInputRef$current","current","click","className","children","onDrop","onDragEnter","onDragOver","onDragLeave","onClick","ref","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","propTypes","func","isRequired","arrayOf","string","number","$RefreshReg$"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/components/niche/FileImporter.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../common/Button';\r\nimport Modal from '../common/Modal';\r\nimport './FileImporter.scss';\r\n\r\n/**\r\n * @typedef {Object} FileImporterProps\r\n * @property {Function} onImport - Callback function when file is imported\r\n * @property {string[]} allowedTypes - Array of allowed file extensions\r\n * @property {number} maxSize - Maximum file size in bytes\r\n */\r\n\r\n/**\r\n * FileImporter component for handling file uploads with drag & drop support\r\n * @param {FileImporterProps} props\r\n */\r\nconst FileImporter = ({ onImport, allowedTypes, maxSize }) => {\r\n  const [isDragActive, setIsDragActive] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const validateFile = (file) => {\r\n    const extension = '.' + file.name.split('.').pop().toLowerCase();\r\n    \r\n    if (!allowedTypes.includes(extension)) {\r\n      throw new Error('Invalid file type. Allowed types: ' + allowedTypes.join(', '));\r\n    }\r\n    \r\n    if (file.size > maxSize) {\r\n      throw new Error('File too large. Maximum size: ' + (maxSize / (1024 * 1024)) + 'MB');\r\n    }\r\n  };\r\n\r\n  const handleFile = async (file) => {\r\n    try {\r\n      setError('');\r\n      setIsLoading(true);\r\n      validateFile(file);\r\n      await onImport(file);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setIsDragActive(false);\r\n    \r\n    const file = e.dataTransfer.files[0];\r\n    if (file) {\r\n      handleFile(file);\r\n    }\r\n  }, []);\r\n\r\n  const handleDragEnter = useCallback((e) => {\r\n    e.preventDefault();\r\n    setIsDragActive(true);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setIsDragActive(false);\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      handleFile(file);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-importer\">\r\n      <div\r\n        className={`file-importer__drop-zone ${isDragActive ? 'file-importer__drop-zone--active' : ''} ${error ? 'file-importer__drop-zone--error' : ''}`}\r\n        data-testid=\"drop-zone\"\r\n        onDrop={handleDrop}\r\n        onDragEnter={handleDragEnter}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onClick={handleClick}\r\n      >\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          className=\"file-importer__input\"\r\n          data-testid=\"file-input\"\r\n          accept={allowedTypes.join(',')}\r\n          onChange={handleInputChange}\r\n        />\r\n        \r\n        <div className=\"file-importer__icon\">\r\n          📁\r\n        </div>\r\n        \r\n        <p className=\"file-importer__text\">\r\n          {isDragActive ? 'Drop file here' : 'Drag and drop file here'}\r\n          <br />\r\n          or click to select\r\n        </p>\r\n        \r\n        <p className=\"file-importer__allowed-types\">\r\n          Allowed types: {allowedTypes.join(', ')}\r\n        </p>\r\n      </div>\r\n\r\n      {isLoading && (\r\n        <div className=\"file-importer__progress\" role=\"progressbar\">\r\n          Importing...\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <p className=\"file-importer__error\">\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nFileImporter.propTypes = {\r\n  onImport: PropTypes.func.isRequired,\r\n  allowedTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  maxSize: PropTypes.number.isRequired\r\n};\r\n\r\nexport default FileImporter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}