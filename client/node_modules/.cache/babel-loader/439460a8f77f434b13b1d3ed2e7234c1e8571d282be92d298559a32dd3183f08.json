{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew Scherer\\\\Desktop\\\\IG Story Checker\\\\client\\\\src\\\\components\\\\settings\\\\ProxyManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport Modal from '../common/Modal';\nimport './ProxyManager.scss';\n\n/**\r\n * @typedef {Object} Proxy\r\n * @property {number} id - Unique identifier\r\n * @property {string} host - IP address or hostname\r\n * @property {number} port - Port number\r\n * @property {string} [username] - Optional username for authentication\r\n * @property {string} [password] - Optional password for authentication\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProxyManager = ({\n  proxies,\n  onAdd,\n  onRemove,\n  onUpdate,\n  onTest\n}) => {\n  _s();\n  const [newProxy, setNewProxy] = useState({\n    host: '',\n    port: '',\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [selectedProxies, setSelectedProxies] = useState([]);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [proxyToRemove, setProxyToRemove] = useState(null);\n  const [testResults, setTestResults] = useState({});\n  const validateProxy = useCallback(proxy => {\n    const newErrors = {};\n\n    // Validate IP address format\n    const ipRegex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n    if (!ipRegex.test(proxy.host)) {\n      newErrors.host = 'Invalid IP address';\n    }\n\n    // Validate port number\n    const port = parseInt(proxy.port, 10);\n    if (isNaN(port) || port < 1 || port > 65535) {\n      newErrors.port = 'Port must be between 1 and 65535';\n    }\n\n    // Validate username format if provided\n    if (proxy.username && !/^[a-zA-Z0-9_-]+$/.test(proxy.username)) {\n      newErrors.username = 'Invalid username format';\n    }\n\n    // Check for duplicate proxy\n    const isDuplicate = proxies.some(p => p.host === proxy.host && p.port === parseInt(proxy.port, 10));\n    if (isDuplicate) {\n      newErrors.host = 'Proxy already exists';\n    }\n    return newErrors;\n  }, [proxies]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProxy(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n  };\n  const handleAdd = () => {\n    const validationErrors = validateProxy(newProxy);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    const payload = {\n      host: newProxy.host,\n      port: parseInt(newProxy.port, 10)\n    };\n    if (newProxy.username) {\n      payload.username = newProxy.username;\n    }\n    if (newProxy.password) {\n      payload.password = newProxy.password;\n    }\n    onAdd(payload);\n    setNewProxy({\n      host: '',\n      port: '',\n      username: '',\n      password: ''\n    });\n  };\n  const handleRemove = proxy => {\n    onRemove(proxy.id);\n  };\n  const handleConfirmRemove = proxy => {\n    setProxyToRemove(proxy);\n    setShowConfirmation(true);\n  };\n  const confirmRemove = () => {\n    if (proxyToRemove) {\n      onRemove(proxyToRemove.id);\n      setShowConfirmation(false);\n      setProxyToRemove(null);\n    }\n  };\n  const handleSelectProxy = proxyId => {\n    setSelectedProxies(prev => {\n      if (prev.includes(proxyId)) {\n        return prev.filter(id => id !== proxyId);\n      }\n      return [...prev, proxyId];\n    });\n  };\n  const handleRemoveSelected = () => {\n    if (selectedProxies.length > 0) {\n      onRemove(selectedProxies);\n      setSelectedProxies([]);\n    }\n  };\n  const handleTest = async proxy => {\n    try {\n      const result = await onTest(proxy);\n      setTestResults(prev => ({\n        ...prev,\n        [proxy.id]: result\n      }));\n    } catch (error) {\n      setTestResults(prev => ({\n        ...prev,\n        [proxy.id]: {\n          success: false,\n          error: error.message\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"proxy-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proxy-manager__add-form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"host\",\n        label: \"Host\",\n        value: newProxy.host,\n        onChange: handleInputChange,\n        error: errors.host,\n        placeholder: \"192.168.1.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"port\",\n        label: \"Port\",\n        type: \"number\",\n        value: newProxy.port,\n        onChange: handleInputChange,\n        error: errors.port,\n        placeholder: \"8080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"username\",\n        label: \"Username (Optional)\",\n        value: newProxy.username,\n        onChange: handleInputChange,\n        error: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"password\",\n        label: \"Password (Optional)\",\n        type: \"password\",\n        value: newProxy.password,\n        onChange: handleInputChange,\n        error: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proxy-manager__list\",\n      children: proxies.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proxy-manager__empty\",\n        children: \"No proxies configured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"proxy-manager__controls\",\n          children: selectedProxies.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleRemoveSelected,\n            children: \"Remove Selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"proxy-manager__items\",\n          children: proxies.map(proxy => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('proxy-manager__item', {\n              'proxy-manager__item--selected': selectedProxies.includes(proxy.id)\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedProxies.includes(proxy.id),\n              onChange: () => handleSelectProxy(proxy.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"proxy-manager__item-details\",\n              children: [proxy.host, \":\", proxy.port, proxy.username && ` (${proxy.username})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"proxy-manager__item-actions\",\n              children: [testResults[proxy.id] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `proxy-manager__test-result proxy-manager__test-result--${testResults[proxy.id].success ? 'success' : 'error'}`,\n                children: testResults[proxy.id].success ? `${testResults[proxy.id].latency}ms` : testResults[proxy.id].error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => handleTest(proxy),\n                children: \"Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                size: \"small\",\n                onClick: () => handleConfirmRemove(proxy),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, proxy.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Confirm Removal\",\n      isOpen: showConfirmation,\n      onClose: () => setShowConfirmation(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proxy-manager__confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Are you sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"proxy-manager__confirmation-actions\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: confirmRemove,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowConfirmation(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(ProxyManager, \"q8yxJgNg075N9kpSNRBhN+YTuEY=\");\n_c = ProxyManager;\nProxyManager.propTypes = {\n  proxies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    host: PropTypes.string.isRequired,\n    port: PropTypes.number.isRequired,\n    username: PropTypes.string,\n    password: PropTypes.string\n  })).isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onTest: PropTypes.func\n};\nexport default ProxyManager;\nvar _c;\n$RefreshReg$(_c, \"ProxyManager\");","map":{"version":3,"names":["React","useState","useCallback","PropTypes","classNames","Input","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ProxyManager","proxies","onAdd","onRemove","onUpdate","onTest","_s","newProxy","setNewProxy","host","port","username","password","errors","setErrors","selectedProxies","setSelectedProxies","showConfirmation","setShowConfirmation","proxyToRemove","setProxyToRemove","testResults","setTestResults","validateProxy","proxy","newErrors","ipRegex","test","parseInt","isNaN","isDuplicate","some","p","handleInputChange","e","name","value","target","prev","handleAdd","validationErrors","Object","keys","length","payload","handleRemove","id","handleConfirmRemove","confirmRemove","handleSelectProxy","proxyId","includes","filter","handleRemoveSelected","handleTest","result","error","success","message","className","children","label","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","variant","map","checked","latency","size","title","isOpen","onClose","_c","propTypes","arrayOf","shape","number","isRequired","string","func","$RefreshReg$"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/components/settings/ProxyManager.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Input from '../common/Input';\r\nimport Button from '../common/Button';\r\nimport Modal from '../common/Modal';\r\nimport './ProxyManager.scss';\r\n\r\n/**\r\n * @typedef {Object} Proxy\r\n * @property {number} id - Unique identifier\r\n * @property {string} host - IP address or hostname\r\n * @property {number} port - Port number\r\n * @property {string} [username] - Optional username for authentication\r\n * @property {string} [password] - Optional password for authentication\r\n */\r\n\r\nconst ProxyManager = ({ proxies, onAdd, onRemove, onUpdate, onTest }) => {\r\n  const [newProxy, setNewProxy] = useState({\r\n    host: '',\r\n    port: '',\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [selectedProxies, setSelectedProxies] = useState([]);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [proxyToRemove, setProxyToRemove] = useState(null);\r\n  const [testResults, setTestResults] = useState({});\r\n\r\n  const validateProxy = useCallback((proxy) => {\r\n    const newErrors = {};\r\n    \r\n    // Validate IP address format\r\n    const ipRegex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\r\n    if (!ipRegex.test(proxy.host)) {\r\n      newErrors.host = 'Invalid IP address';\r\n    }\r\n    \r\n    // Validate port number\r\n    const port = parseInt(proxy.port, 10);\r\n    if (isNaN(port) || port < 1 || port > 65535) {\r\n      newErrors.port = 'Port must be between 1 and 65535';\r\n    }\r\n    \r\n    // Validate username format if provided\r\n    if (proxy.username && !/^[a-zA-Z0-9_-]+$/.test(proxy.username)) {\r\n      newErrors.username = 'Invalid username format';\r\n    }\r\n    \r\n    // Check for duplicate proxy\r\n    const isDuplicate = proxies.some(\r\n      p => p.host === proxy.host && p.port === parseInt(proxy.port, 10)\r\n    );\r\n    if (isDuplicate) {\r\n      newErrors.host = 'Proxy already exists';\r\n    }\r\n    \r\n    return newErrors;\r\n  }, [proxies]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewProxy(prev => ({ ...prev, [name]: value }));\r\n    setErrors(prev => ({ ...prev, [name]: '' }));\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const validationErrors = validateProxy(newProxy);\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      host: newProxy.host,\r\n      port: parseInt(newProxy.port, 10)\r\n    };\r\n\r\n    if (newProxy.username) {\r\n      payload.username = newProxy.username;\r\n    }\r\n    if (newProxy.password) {\r\n      payload.password = newProxy.password;\r\n    }\r\n\r\n    onAdd(payload);\r\n\r\n    setNewProxy({\r\n      host: '',\r\n      port: '',\r\n      username: '',\r\n      password: ''\r\n    });\r\n  };\r\n\r\n  const handleRemove = (proxy) => {\r\n    onRemove(proxy.id);\r\n  };\r\n\r\n  const handleConfirmRemove = (proxy) => {\r\n    setProxyToRemove(proxy);\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const confirmRemove = () => {\r\n    if (proxyToRemove) {\r\n      onRemove(proxyToRemove.id);\r\n      setShowConfirmation(false);\r\n      setProxyToRemove(null);\r\n    }\r\n  };\r\n\r\n  const handleSelectProxy = (proxyId) => {\r\n    setSelectedProxies(prev => {\r\n      if (prev.includes(proxyId)) {\r\n        return prev.filter(id => id !== proxyId);\r\n      }\r\n      return [...prev, proxyId];\r\n    });\r\n  };\r\n\r\n  const handleRemoveSelected = () => {\r\n    if (selectedProxies.length > 0) {\r\n      onRemove(selectedProxies);\r\n      setSelectedProxies([]);\r\n    }\r\n  };\r\n\r\n  const handleTest = async (proxy) => {\r\n    try {\r\n      const result = await onTest(proxy);\r\n      setTestResults(prev => ({\r\n        ...prev,\r\n        [proxy.id]: result\r\n      }));\r\n    } catch (error) {\r\n      setTestResults(prev => ({\r\n        ...prev,\r\n        [proxy.id]: { success: false, error: error.message }\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"proxy-manager\">\r\n      <div className=\"proxy-manager__add-form\">\r\n        <Input\r\n          name=\"host\"\r\n          label=\"Host\"\r\n          value={newProxy.host}\r\n          onChange={handleInputChange}\r\n          error={errors.host}\r\n          placeholder=\"192.168.1.1\"\r\n        />\r\n        <Input\r\n          name=\"port\"\r\n          label=\"Port\"\r\n          type=\"number\"\r\n          value={newProxy.port}\r\n          onChange={handleInputChange}\r\n          error={errors.port}\r\n          placeholder=\"8080\"\r\n        />\r\n        <Input\r\n          name=\"username\"\r\n          label=\"Username (Optional)\"\r\n          value={newProxy.username}\r\n          onChange={handleInputChange}\r\n          error={errors.username}\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          label=\"Password (Optional)\"\r\n          type=\"password\"\r\n          value={newProxy.password}\r\n          onChange={handleInputChange}\r\n          error={errors.password}\r\n        />\r\n        <Button onClick={handleAdd}>Add</Button>\r\n      </div>\r\n\r\n      <div className=\"proxy-manager__list\">\r\n        {proxies.length === 0 ? (\r\n          <div className=\"proxy-manager__empty\">No proxies configured</div>\r\n        ) : (\r\n          <>\r\n            <div className=\"proxy-manager__controls\">\r\n              {selectedProxies.length > 0 && (\r\n                <Button variant=\"danger\" onClick={handleRemoveSelected}>\r\n                  Remove Selected\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <div className=\"proxy-manager__items\">\r\n              {proxies.map(proxy => (\r\n                <div\r\n                  key={proxy.id}\r\n                  className={classNames('proxy-manager__item', {\r\n                    'proxy-manager__item--selected': selectedProxies.includes(proxy.id)\r\n                  })}\r\n                >\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedProxies.includes(proxy.id)}\r\n                    onChange={() => handleSelectProxy(proxy.id)}\r\n                  />\r\n                  <span className=\"proxy-manager__item-details\">\r\n                    {proxy.host}:{proxy.port}\r\n                    {proxy.username && ` (${proxy.username})`}\r\n                  </span>\r\n                  <div className=\"proxy-manager__item-actions\">\r\n                    {testResults[proxy.id] && (\r\n                      <span className={`proxy-manager__test-result proxy-manager__test-result--${testResults[proxy.id].success ? 'success' : 'error'}`}>\r\n                        {testResults[proxy.id].success \r\n                          ? `${testResults[proxy.id].latency}ms`\r\n                          : testResults[proxy.id].error}\r\n                      </span>\r\n                    )}\r\n                    <Button\r\n                      size=\"small\"\r\n                      onClick={() => handleTest(proxy)}\r\n                    >\r\n                      Test\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      size=\"small\"\r\n                      onClick={() => handleConfirmRemove(proxy)}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <Modal\r\n        title=\"Confirm Removal\"\r\n        isOpen={showConfirmation}\r\n        onClose={() => setShowConfirmation(false)}\r\n      >\r\n        <div className=\"proxy-manager__confirmation\">\r\n          <h3>Are you sure?</h3>\r\n          <p>This action cannot be undone.</p>\r\n          <div className=\"proxy-manager__confirmation-actions\">\r\n            <Button variant=\"danger\" onClick={confirmRemove}>\r\n              Confirm\r\n            </Button>\r\n            <Button onClick={() => setShowConfirmation(false)}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nProxyManager.propTypes = {\r\n  proxies: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    host: PropTypes.string.isRequired,\r\n    port: PropTypes.number.isRequired,\r\n    username: PropTypes.string,\r\n    password: PropTypes.string\r\n  })).isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n  onTest: PropTypes.func\r\n};\r\n\r\nexport default ProxyManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}