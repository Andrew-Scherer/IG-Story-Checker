{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew Scherer\\\\Desktop\\\\IG Story Checker\\\\client\\\\src\\\\components\\\\niche\\\\NicheFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport useNicheStore from '../../stores/nicheStore';\nimport useProfileStore from '../../stores/profileStore';\nimport NicheList from './NicheList';\nimport ProfileList from './ProfileList';\nimport FileImporter from './FileImporter';\nimport './NicheFeed.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NicheFeed() {\n  _s();\n  const {\n    niches,\n    selectedNicheId,\n    setNiches,\n    setSelectedNicheId,\n    reorderNiches,\n    getSortedNiches\n  } = useNicheStore();\n\n  // For development, initialize with some sample data\n  useEffect(() => {\n    if (niches.length === 0) {\n      setNiches([{\n        id: 1,\n        name: 'Fitness',\n        profileCount: 5,\n        order: 1\n      }, {\n        id: 2,\n        name: 'Fashion',\n        profileCount: 3,\n        order: 2\n      }, {\n        id: 3,\n        name: 'Food',\n        profileCount: 4,\n        order: 3\n      }]);\n    }\n  }, [niches.length, setNiches]);\n  const handleNicheSelect = id => {\n    setSelectedNicheId(id);\n  };\n  const handleNicheReorder = (fromIndex, toIndex) => {\n    reorderNiches(fromIndex, toIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"niche-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niche-feed__left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"niche-feed__panel-title\",\n        children: \"Niches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NicheList, {\n        niches: getSortedNiches(),\n        selectedNicheId: selectedNicheId,\n        onSelect: handleNicheSelect,\n        onReorder: handleNicheReorder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niche-feed__right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niche-feed__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"niche-feed__panel-title\",\n          children: \"Profiles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileImporter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(NicheFeed, \"99Y6TB6eEClvC068iT7n5M5iSRQ=\", false, function () {\n  return [useNicheStore];\n});\n_c = NicheFeed;\nexport default NicheFeed;\nvar _c;\n$RefreshReg$(_c, \"NicheFeed\");","map":{"version":3,"names":["React","useEffect","useNicheStore","useProfileStore","NicheList","ProfileList","FileImporter","jsxDEV","_jsxDEV","NicheFeed","_s","niches","selectedNicheId","setNiches","setSelectedNicheId","reorderNiches","getSortedNiches","length","id","name","profileCount","order","handleNicheSelect","handleNicheReorder","fromIndex","toIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onReorder","_c","$RefreshReg$"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/components/niche/NicheFeed.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport useNicheStore from '../../stores/nicheStore';\r\nimport useProfileStore from '../../stores/profileStore';\r\nimport NicheList from './NicheList';\r\nimport ProfileList from './ProfileList';\r\nimport FileImporter from './FileImporter';\r\nimport './NicheFeed.scss';\r\n\r\nfunction NicheFeed() {\r\n  const {\r\n    niches,\r\n    selectedNicheId,\r\n    setNiches,\r\n    setSelectedNicheId,\r\n    reorderNiches,\r\n    getSortedNiches\r\n  } = useNicheStore();\r\n\r\n  // For development, initialize with some sample data\r\n  useEffect(() => {\r\n    if (niches.length === 0) {\r\n      setNiches([\r\n        { id: 1, name: 'Fitness', profileCount: 5, order: 1 },\r\n        { id: 2, name: 'Fashion', profileCount: 3, order: 2 },\r\n        { id: 3, name: 'Food', profileCount: 4, order: 3 }\r\n      ]);\r\n    }\r\n  }, [niches.length, setNiches]);\r\n\r\n  const handleNicheSelect = (id) => {\r\n    setSelectedNicheId(id);\r\n  };\r\n\r\n  const handleNicheReorder = (fromIndex, toIndex) => {\r\n    reorderNiches(fromIndex, toIndex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"niche-feed\">\r\n      <div className=\"niche-feed__left-panel\">\r\n        <h2 className=\"niche-feed__panel-title\">Niches</h2>\r\n        <NicheList\r\n          niches={getSortedNiches()}\r\n          selectedNicheId={selectedNicheId}\r\n          onSelect={handleNicheSelect}\r\n          onReorder={handleNicheReorder}\r\n        />\r\n      </div>\r\n      <div className=\"niche-feed__right-panel\">\r\n        <div className=\"niche-feed__actions\">\r\n          <h2 className=\"niche-feed__panel-title\">Profiles</h2>\r\n          <FileImporter />\r\n        </div>\r\n        <ProfileList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NicheFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}