{"ast":null,"code":"import create from 'zustand';\nconst useProxyStore = create((set, get) => ({\n  proxies: [],\n  addProxy: () => set(state => ({\n    proxies: [...state.proxies, {\n      host: '',\n      port: '',\n      username: '',\n      password: '',\n      status: 'untested'\n    }]\n  })),\n  removeProxy: index => set(state => ({\n    proxies: state.proxies.filter((_, i) => i !== index)\n  })),\n  updateProxy: (index, updates) => set(state => ({\n    proxies: state.proxies.map((proxy, i) => i === index ? {\n      ...proxy,\n      ...updates\n    } : proxy)\n  })),\n  testProxy: async index => {\n    const proxy = get().proxies[index];\n    set(state => ({\n      proxies: state.proxies.map((p, i) => i === index ? {\n        ...p,\n        status: 'testing'\n      } : p)\n    }));\n    try {\n      // TODO: Implement actual proxy testing logic\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      set(state => ({\n        proxies: state.proxies.map((p, i) => i === index ? {\n          ...p,\n          status: 'working'\n        } : p)\n      }));\n    } catch (error) {\n      set(state => ({\n        proxies: state.proxies.map((p, i) => i === index ? {\n          ...p,\n          status: 'failed'\n        } : p)\n      }));\n    }\n  }\n}));\nexport default useProxyStore;","map":{"version":3,"names":["create","useProxyStore","set","get","proxies","addProxy","state","host","port","username","password","status","removeProxy","index","filter","_","i","updateProxy","updates","map","proxy","testProxy","p","Promise","resolve","setTimeout","error"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/stores/proxyStore.js"],"sourcesContent":["import create from 'zustand';\r\n\r\nconst useProxyStore = create((set, get) => ({\r\n  proxies: [],\r\n\r\n  addProxy: () => set(state => ({\r\n    proxies: [\r\n      ...state.proxies,\r\n      {\r\n        host: '',\r\n        port: '',\r\n        username: '',\r\n        password: '',\r\n        status: 'untested'\r\n      }\r\n    ]\r\n  })),\r\n\r\n  removeProxy: (index) => set(state => ({\r\n    proxies: state.proxies.filter((_, i) => i !== index)\r\n  })),\r\n\r\n  updateProxy: (index, updates) => set(state => ({\r\n    proxies: state.proxies.map((proxy, i) => \r\n      i === index ? { ...proxy, ...updates } : proxy\r\n    )\r\n  })),\r\n\r\n  testProxy: async (index) => {\r\n    const proxy = get().proxies[index];\r\n    set(state => ({\r\n      proxies: state.proxies.map((p, i) => \r\n        i === index ? { ...p, status: 'testing' } : p\r\n      )\r\n    }));\r\n\r\n    try {\r\n      // TODO: Implement actual proxy testing logic\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      set(state => ({\r\n        proxies: state.proxies.map((p, i) => \r\n          i === index ? { ...p, status: 'working' } : p\r\n        )\r\n      }));\r\n    } catch (error) {\r\n      set(state => ({\r\n        proxies: state.proxies.map((p, i) => \r\n          i === index ? { ...p, status: 'failed' } : p\r\n        )\r\n      }));\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useProxyStore;\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAE5B,MAAMC,aAAa,GAAGD,MAAM,CAAC,CAACE,GAAG,EAAEC,GAAG,MAAM;EAC1CC,OAAO,EAAE,EAAE;EAEXC,QAAQ,EAAEA,CAAA,KAAMH,GAAG,CAACI,KAAK,KAAK;IAC5BF,OAAO,EAAE,CACP,GAAGE,KAAK,CAACF,OAAO,EAChB;MACEG,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC;EAEL,CAAC,CAAC,CAAC;EAEHC,WAAW,EAAGC,KAAK,IAAKX,GAAG,CAACI,KAAK,KAAK;IACpCF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACU,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK;EACrD,CAAC,CAAC,CAAC;EAEHI,WAAW,EAAEA,CAACJ,KAAK,EAAEK,OAAO,KAAKhB,GAAG,CAACI,KAAK,KAAK;IAC7CF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEJ,CAAC,KAClCA,CAAC,KAAKH,KAAK,GAAG;MAAE,GAAGO,KAAK;MAAE,GAAGF;IAAQ,CAAC,GAAGE,KAC3C;EACF,CAAC,CAAC,CAAC;EAEHC,SAAS,EAAE,MAAOR,KAAK,IAAK;IAC1B,MAAMO,KAAK,GAAGjB,GAAG,CAAC,CAAC,CAACC,OAAO,CAACS,KAAK,CAAC;IAClCX,GAAG,CAACI,KAAK,KAAK;MACZF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACe,GAAG,CAAC,CAACG,CAAC,EAAEN,CAAC,KAC9BA,CAAC,KAAKH,KAAK,GAAG;QAAE,GAAGS,CAAC;QAAEX,MAAM,EAAE;MAAU,CAAC,GAAGW,CAC9C;IACF,CAAC,CAAC,CAAC;IAEH,IAAI;MACF;MACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MAEvDtB,GAAG,CAACI,KAAK,KAAK;QACZF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACe,GAAG,CAAC,CAACG,CAAC,EAAEN,CAAC,KAC9BA,CAAC,KAAKH,KAAK,GAAG;UAAE,GAAGS,CAAC;UAAEX,MAAM,EAAE;QAAU,CAAC,GAAGW,CAC9C;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdxB,GAAG,CAACI,KAAK,KAAK;QACZF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACe,GAAG,CAAC,CAACG,CAAC,EAAEN,CAAC,KAC9BA,CAAC,KAAKH,KAAK,GAAG;UAAE,GAAGS,CAAC;UAAEX,MAAM,EAAE;QAAS,CAAC,GAAGW,CAC7C;MACF,CAAC,CAAC,CAAC;IACL;EACF;AACF,CAAC,CAAC,CAAC;AAEH,eAAerB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}