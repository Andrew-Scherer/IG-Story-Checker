{"ast":null,"code":"import create from 'zustand';\nconst useProfileStore = create((set, get) => ({\n  // State\n  profiles: [],\n  filters: {\n    nicheId: null,\n    status: 'active',\n    search: ''\n  },\n  pagination: {\n    page: 1,\n    pageSize: 20,\n    total: 0\n  },\n  loading: false,\n  error: null,\n  // Actions\n  setProfiles: profiles => set({\n    profiles\n  }),\n  addProfiles: newProfiles => {\n    const currentProfiles = get().profiles;\n    const uniqueProfiles = newProfiles.filter(newProfile => !currentProfiles.some(p => p.username === newProfile.username));\n    set({\n      profiles: [...currentProfiles, ...uniqueProfiles]\n    });\n  },\n  updateProfile: (id, updates) => {\n    const profiles = get().profiles.map(profile => profile.id === id ? {\n      ...profile,\n      ...updates\n    } : profile);\n    set({\n      profiles\n    });\n  },\n  deleteProfiles: ids => {\n    const profiles = get().profiles.filter(profile => !ids.includes(profile.id));\n    set({\n      profiles\n    });\n  },\n  assignToNiche: (profileIds, nicheId) => {\n    const profiles = get().profiles.map(profile => profileIds.includes(profile.id) ? {\n      ...profile,\n      nicheId\n    } : profile);\n    set({\n      profiles\n    });\n  },\n  setFilters: newFilters => {\n    set(state => ({\n      filters: {\n        ...state.filters,\n        ...newFilters\n      },\n      pagination: {\n        ...state.pagination,\n        page: 1\n      }\n    }));\n  },\n  setPagination: updates => {\n    set(state => ({\n      pagination: {\n        ...state.pagination,\n        ...updates\n      }\n    }));\n  },\n  setLoading: loading => set({\n    loading\n  }),\n  setError: error => set({\n    error\n  }),\n  clearError: () => set({\n    error: null\n  }),\n  // Selectors\n  getProfilesByNiche: nicheId => {\n    const state = get();\n    return state.profiles.filter(profile => profile.nicheId === nicheId);\n  },\n  getFilteredProfiles: () => {\n    const {\n      profiles,\n      filters\n    } = get();\n    return profiles.filter(profile => {\n      if (filters.nicheId && profile.nicheId !== filters.nicheId) return false;\n      if (filters.status !== 'all' && profile.status !== filters.status) return false;\n      if (filters.search && !profile.username.toLowerCase().includes(filters.search.toLowerCase())) return false;\n      return true;\n    });\n  }\n}));\nexport default useProfileStore;","map":{"version":3,"names":["create","useProfileStore","set","get","profiles","filters","nicheId","status","search","pagination","page","pageSize","total","loading","error","setProfiles","addProfiles","newProfiles","currentProfiles","uniqueProfiles","filter","newProfile","some","p","username","updateProfile","id","updates","map","profile","deleteProfiles","ids","includes","assignToNiche","profileIds","setFilters","newFilters","state","setPagination","setLoading","setError","clearError","getProfilesByNiche","getFilteredProfiles","toLowerCase"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/stores/profileStore.js"],"sourcesContent":["import create from 'zustand';\r\n\r\nconst useProfileStore = create((set, get) => ({\r\n  // State\r\n  profiles: [],\r\n  filters: {\r\n    nicheId: null,\r\n    status: 'active',\r\n    search: ''\r\n  },\r\n  pagination: {\r\n    page: 1,\r\n    pageSize: 20,\r\n    total: 0\r\n  },\r\n  loading: false,\r\n  error: null,\r\n\r\n  // Actions\r\n  setProfiles: (profiles) => set({ profiles }),\r\n\r\n  addProfiles: (newProfiles) => {\r\n    const currentProfiles = get().profiles;\r\n    const uniqueProfiles = newProfiles.filter(\r\n      newProfile => !currentProfiles.some(p => p.username === newProfile.username)\r\n    );\r\n    set({ profiles: [...currentProfiles, ...uniqueProfiles] });\r\n  },\r\n\r\n  updateProfile: (id, updates) => {\r\n    const profiles = get().profiles.map(profile =>\r\n      profile.id === id ? { ...profile, ...updates } : profile\r\n    );\r\n    set({ profiles });\r\n  },\r\n\r\n  deleteProfiles: (ids) => {\r\n    const profiles = get().profiles.filter(profile => !ids.includes(profile.id));\r\n    set({ profiles });\r\n  },\r\n\r\n  assignToNiche: (profileIds, nicheId) => {\r\n    const profiles = get().profiles.map(profile =>\r\n      profileIds.includes(profile.id) ? { ...profile, nicheId } : profile\r\n    );\r\n    set({ profiles });\r\n  },\r\n\r\n  setFilters: (newFilters) => {\r\n    set(state => ({\r\n      filters: { ...state.filters, ...newFilters },\r\n      pagination: { ...state.pagination, page: 1 }\r\n    }));\r\n  },\r\n\r\n  setPagination: (updates) => {\r\n    set(state => ({\r\n      pagination: { ...state.pagination, ...updates }\r\n    }));\r\n  },\r\n\r\n  setLoading: (loading) => set({ loading }),\r\n  setError: (error) => set({ error }),\r\n  clearError: () => set({ error: null }),\r\n\r\n  // Selectors\r\n  getProfilesByNiche: (nicheId) => {\r\n    const state = get();\r\n    return state.profiles.filter(profile => profile.nicheId === nicheId);\r\n  },\r\n\r\n  getFilteredProfiles: () => {\r\n    const { profiles, filters } = get();\r\n    return profiles.filter(profile => {\r\n      if (filters.nicheId && profile.nicheId !== filters.nicheId) return false;\r\n      if (filters.status !== 'all' && profile.status !== filters.status) return false;\r\n      if (filters.search && !profile.username.toLowerCase().includes(filters.search.toLowerCase())) return false;\r\n      return true;\r\n    });\r\n  }\r\n}));\r\n\r\nexport default useProfileStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}