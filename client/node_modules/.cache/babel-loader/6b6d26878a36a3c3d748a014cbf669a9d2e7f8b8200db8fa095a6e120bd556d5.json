{"ast":null,"code":"import create from 'zustand';\nconst useProxyStore = create((set, get) => ({\n  proxies: [],\n  addProxy: proxy => set(state => ({\n    proxies: [...state.proxies, {\n      ...proxy,\n      id: Date.now()\n    }]\n  })),\n  addProxies: newProxies => set(state => ({\n    proxies: [...state.proxies, ...newProxies.map((proxy, index) => ({\n      ...proxy,\n      id: Date.now() + index\n    }))]\n  })),\n  removeProxy: ids => set(state => ({\n    proxies: state.proxies.filter(proxy => Array.isArray(ids) ? !ids.includes(proxy.id) : proxy.id !== ids)\n  })),\n  testProxy: async id => {\n    // Mark proxy as testing\n    set(state => ({\n      proxies: state.proxies.map(p => p.id === id ? {\n        ...p,\n        status: 'testing'\n      } : p)\n    }));\n    try {\n      // TODO: Implement actual proxy testing logic\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      set(state => ({\n        proxies: state.proxies.map(p => p.id === id ? {\n          ...p,\n          status: 'working'\n        } : p)\n      }));\n    } catch (error) {\n      set(state => ({\n        proxies: state.proxies.map(p => p.id === id ? {\n          ...p,\n          status: 'failed'\n        } : p)\n      }));\n    }\n  }\n}));\nexport default useProxyStore;","map":{"version":3,"names":["create","useProxyStore","set","get","proxies","addProxy","proxy","state","id","Date","now","addProxies","newProxies","map","index","removeProxy","ids","filter","Array","isArray","includes","testProxy","p","status","Promise","resolve","setTimeout","error"],"sources":["C:/Users/Andrew Scherer/Desktop/IG Story Checker/client/src/stores/proxyStore.js"],"sourcesContent":["import create from 'zustand';\r\n\r\nconst useProxyStore = create((set, get) => ({\r\n  proxies: [],\r\n\r\n  addProxy: (proxy) => set(state => ({\r\n    proxies: [...state.proxies, { ...proxy, id: Date.now() }]\r\n  })),\r\n\r\n  addProxies: (newProxies) => set(state => ({\r\n    proxies: [\r\n      ...state.proxies,\r\n      ...newProxies.map((proxy, index) => ({ \r\n        ...proxy, \r\n        id: Date.now() + index \r\n      }))\r\n    ]\r\n  })),\r\n\r\n  removeProxy: (ids) => set(state => ({\r\n    proxies: state.proxies.filter(proxy => \r\n      Array.isArray(ids) ? !ids.includes(proxy.id) : proxy.id !== ids\r\n    )\r\n  })),\r\n\r\n  testProxy: async (id) => {\r\n    // Mark proxy as testing\r\n    set(state => ({\r\n      proxies: state.proxies.map(p => \r\n        p.id === id ? { ...p, status: 'testing' } : p\r\n      )\r\n    }));\r\n\r\n    try {\r\n      // TODO: Implement actual proxy testing logic\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      set(state => ({\r\n        proxies: state.proxies.map(p => \r\n          p.id === id ? { ...p, status: 'working' } : p\r\n        )\r\n      }));\r\n    } catch (error) {\r\n      set(state => ({\r\n        proxies: state.proxies.map(p => \r\n          p.id === id ? { ...p, status: 'failed' } : p\r\n        )\r\n      }));\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useProxyStore;\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAE5B,MAAMC,aAAa,GAAGD,MAAM,CAAC,CAACE,GAAG,EAAEC,GAAG,MAAM;EAC1CC,OAAO,EAAE,EAAE;EAEXC,QAAQ,EAAGC,KAAK,IAAKJ,GAAG,CAACK,KAAK,KAAK;IACjCH,OAAO,EAAE,CAAC,GAAGG,KAAK,CAACH,OAAO,EAAE;MAAE,GAAGE,KAAK;MAAEE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;EAC1D,CAAC,CAAC,CAAC;EAEHC,UAAU,EAAGC,UAAU,IAAKV,GAAG,CAACK,KAAK,KAAK;IACxCH,OAAO,EAAE,CACP,GAAGG,KAAK,CAACH,OAAO,EAChB,GAAGQ,UAAU,CAACC,GAAG,CAAC,CAACP,KAAK,EAAEQ,KAAK,MAAM;MACnC,GAAGR,KAAK;MACRE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGI;IACnB,CAAC,CAAC,CAAC;EAEP,CAAC,CAAC,CAAC;EAEHC,WAAW,EAAGC,GAAG,IAAKd,GAAG,CAACK,KAAK,KAAK;IAClCH,OAAO,EAAEG,KAAK,CAACH,OAAO,CAACa,MAAM,CAACX,KAAK,IACjCY,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,GAAG,CAACA,GAAG,CAACI,QAAQ,CAACd,KAAK,CAACE,EAAE,CAAC,GAAGF,KAAK,CAACE,EAAE,KAAKQ,GAC9D;EACF,CAAC,CAAC,CAAC;EAEHK,SAAS,EAAE,MAAOb,EAAE,IAAK;IACvB;IACAN,GAAG,CAACK,KAAK,KAAK;MACZH,OAAO,EAAEG,KAAK,CAACH,OAAO,CAACS,GAAG,CAACS,CAAC,IAC1BA,CAAC,CAACd,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGc,CAAC;QAAEC,MAAM,EAAE;MAAU,CAAC,GAAGD,CAC9C;IACF,CAAC,CAAC,CAAC;IAEH,IAAI;MACF;MACA,MAAM,IAAIE,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MAEvDvB,GAAG,CAACK,KAAK,KAAK;QACZH,OAAO,EAAEG,KAAK,CAACH,OAAO,CAACS,GAAG,CAACS,CAAC,IAC1BA,CAAC,CAACd,EAAE,KAAKA,EAAE,GAAG;UAAE,GAAGc,CAAC;UAAEC,MAAM,EAAE;QAAU,CAAC,GAAGD,CAC9C;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdzB,GAAG,CAACK,KAAK,KAAK;QACZH,OAAO,EAAEG,KAAK,CAACH,OAAO,CAACS,GAAG,CAACS,CAAC,IAC1BA,CAAC,CAACd,EAAE,KAAKA,EAAE,GAAG;UAAE,GAAGc,CAAC;UAAEC,MAAM,EAAE;QAAS,CAAC,GAAGD,CAC7C;MACF,CAAC,CAAC,CAAC;IACL;EACF;AACF,CAAC,CAAC,CAAC;AAEH,eAAerB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}